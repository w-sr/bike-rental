type Bike {
  _id: ID!
  model: String!
  color: String!
  location: String!
  rate: String!
  createdAt: String!
  updatedAt: String!
}

input BikeCreateInput {
  model: String!
  color: String!
  location: String!
}

input BikeUpdateInput {
  model: String
  color: String
  location: String
  rate: String
  reserved: Boolean
}

input BikeInputFilter {
  model: String
  color: String
  location: String
  rate: String
  start_date: String
  end_date: String
}

type Payload {
  myBikes: [Bike]
  availableBikes: [Bike]
}

type Query {
  bike(id: String!): Bike
  bikes(input: BikeInputFilter): Payload
}

type Mutation {
  createBike(input: BikeCreateInput!): Bike
  deleteBike(id: String!): Bike
  updateBike(id: String!, input: BikeUpdateInput): Bike
}
